apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'checkstyle'
apply plugin: 'spoon'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        applicationId "com.github.tommykw.musical"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix "-debug"
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/main/kotlin'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
    }

    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$android_support_version"
    compile "com.android.support:design:$android_support_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'com.jakewharton:kotterknife:0.1.0-SNAPSHOT'
    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.okhttp3:okhttp:$okhttp_version"
    compile "com.google.code.gson:gson:$gson_version"
    compile 'com.facebook.stetho:stetho:1.5.0'
    compile 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    compile 'io.reactivex:rxjava:1.2.0'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.firebase:firebase-client-android:2.5.2'
    compile 'com.jakewharton.timber:timber:4.1.0'

    // anko
    compile 'org.jetbrains.anko:anko-sdk15:0.9'
    compile 'org.jetbrains.anko:anko-support-v4:0.9'
    compile 'org.jetbrains.anko:anko-appcompat-v7:0.9'

    testCompile "com.android.support:support-annotations:$android_support_version"
    testCompile 'com.android.support.test:runner:1.0.1'
    testCompile 'com.android.support.test:rules:1.0.1'
    testCompile "junit:junit:$junit_version"
    testCompile "org.mockito:mockito-core:2.8.47"
    testCompile ("org.robolectric:robolectric:2.4") {
        exclude module: 'support-annotations'
    }

    // Error:Conflict with dependency 'com.android.support:support-annotations'. Resolved versions for app (24.0.0) and test app (23.1.1) differ. See http://g.co/androidstudio/app-test-app-conflict for details.
    androidTestCompile "com.android.support:support-annotations:$android_support_version"
    androidTestCompile 'com.android.support.test:runner:1.0.1'
    androidTestCompile 'com.android.support.test:rules:1.0.1'
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.5.4'
    androidTestCompile 'com.squareup.spoon:spoon-client:1.3.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.1'
}

buildscript {
    ext.kotlin_version = '1.1.51'
    ext.android_support_version = '26.0.2'
    ext.android_arch_version ='1.0.0-beta2'
    ext.retrofit_version = '2.3.0'
    ext.okhttp_version = '3.9.0'
    ext.gson_version = '2.8.2'
    ext.constraint_layout_version = '1.0.2'
    ext.junit_version = '4.12'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
}

spoon {
    debug = true
    className = 'fully.qualified.TestCase'
    methodName = 'execSpoon'
}

task checkstyle (type: Checkstyle) {
    configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    source 'src'
    include '**/*.java'
    reports {
        xml {
            destination "${project.rootDir}/build/reports/checkstyle.xml"
        }
    }
    classpath = files()
}

check.dependsOn 'checkstyle'
